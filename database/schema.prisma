generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URI")
}

model User {
  id            String         @id @default(uuid()) @map("_id")
  name          String
  email         String?        @unique
  emailVerified DateTime?      @map("email_verified")
  image         String?
  agreed        Boolean?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  jobs      Job[]
  skills    Skill[]

  @@map("users")
}

model Account {
  id                String   @id @default(cuid()) @map("_id")
  userId            String   @map("user_id")
  type              String?
  provider          String
  providerAccountId String   @map("provider_account_id")
  token_type        String?
  refresh_token     String?  @db.String
  access_token      String?  @db.String
  expires_at        Int?
  scope             String?
  id_token          String?  @db.String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  userId       String?  @map("user_id")
  sessionToken String   @unique @map("session_token") @db.String
  accessToken  String?  @map("access_token") @db.String
  expires      DateTime
  user         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("sessions")
}

model VerificationRequest {
  id         String   @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Job {
  id          String   @id @default(uuid()) @map("_id")
  company     String
  position    String
  status      String
  appliedDate DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model Skill {
  id        String   @id @default(uuid()) @map("_id")
  name      String
  progress  Int      @default(0)
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}